name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: |
        mkdir out_x86-64
        cp config.yml out_x86-64/
        go build -o out_x86-64/mikrotik-capsman -v .
        mkdir out_arm32
        cp config.yml out_arm32/
        GOARCH=arm go build -o out_arm32/mikrotik-capsman -v .
      
    - name: Upload binary x86-64
      uses: actions/upload-artifact@master
      with:
        name: linux_x86-64
        path: out_x86-64

    - name: Upload binary arm32
      uses: actions/upload-artifact@master
      with:
        name: linux_arm32
        path: out_arm32


